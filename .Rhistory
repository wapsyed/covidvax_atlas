theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm"),
panel.grid.major = element_line(size = 0.05),
panel.grid.minor = element_line(size = 0.05)) +
labs(y = "NES",
title = "B cell",
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
CellMarker_ssGSEA_2 %>%
filter(id == "T cell") %>%
ggplot() +
aes(x = condition, y = nes, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm"),
panel.grid.major = element_line(size = 0.05),
panel.grid.minor = element_line(size = 0.05)) +
labs(y = "NES",
title = "B cell",
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
CellMarker_ssGSEA_2
CellMarker_ssGSEA_2 %>%
filter(id == "CD8+ T cell") %>%
ggplot() +
aes(x = condition, y = nes, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm"),
panel.grid.major = element_line(size = 0.05),
panel.grid.minor = element_line(size = 0.05)) +
labs(y = "NES",
title = "B cell",
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
id = "CD8+ T cell"
CellMarker_ssGSEA_2 %>%
filter(id == id) %>%
ggplot() +
aes(x = condition, y = nes, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm"),
panel.grid.major = element_line(size = 0.05),
panel.grid.minor = element_line(size = 0.05)) +
labs(y = "NES",
title = id,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
id = "CD8+ T cell"
CellMarker_ssGSEA_2 %>%
filter(id == id) %>%
ggplot() +
aes(x = condition, y = nes, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm"),
panel.grid.major = element_line(size = 0.05),
panel.grid.minor = element_line(size = 0.05)) +
labs(y = "NES",
title = id,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
CellMarker_ssGSEA_2 %>%
filter(id == id)
id_selec = "CD8+ T cell"
CellMarker_ssGSEA_2 %>%
filter(id == id_selec) %>%
ggplot() +
aes(x = condition, y = nes, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm"),
panel.grid.major = element_line(size = 0.05),
panel.grid.minor = element_line(size = 0.05)) +
labs(y = "NES",
title = id_selec,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
create_boxplots <- function(result_df) {
unique_processes <- unique(result_df$id)
purrr::map(unique_processes, function(process_name) {
cellmarker_boxplot <- result_df %>%
filter(cell_type == process_name) %>%
ggplot() +
aes(x = condition, y = value, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm")) +
labs(y = "score",
title = process_name,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
ggsave(cellmarker_boxplot,
file = here("Figures", paste0("GSEA_singlesample_CellMarker_boxplot_", process_name, ".png")),
width = 12, height = 6)
})
}
# Apply to all processes
create_boxplots(CellMarker_ssGSEA_2)
cellmarker_boxplot <- result_df %>%
filter(id == process_name) %>%
ggplot() +
aes(x = condition, y = value, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm")) +
labs(y = "score",
title = process_name,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
create_boxplots <- function(result_df) {
unique_processes <- unique(result_df$id)
purrr::map(unique_processes, function(process_name) {
cellmarker_boxplot <- result_df %>%
filter(id == process_name) %>%
ggplot() +
aes(x = condition, y = value, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm")) +
labs(y = "score",
title = process_name,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
ggsave(cellmarker_boxplot,
file = here("Figures", paste0("GSEA_singlesample_CellMarker_boxplot_", process_name, ".png")),
width = 12, height = 6)
})
}
# Apply to all processes
create_boxplots(CellMarker_ssGSEA_2)
create_boxplots <- function(result_df) {
unique_processes <- unique(result_df$id)
purrr::map(unique_processes, function(process_name) {
cellmarker_boxplot <- result_df %>%
filter(id == process_name) %>%
ggplot() +
aes(x = condition, y = nes, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm")) +
labs(y = "score",
title = process_name,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
ggsave(cellmarker_boxplot,
file = here("Figures", paste0("GSEA_singlesample_CellMarker_boxplot_", process_name, ".png")),
width = 12, height = 6)
})
}
# Apply to all processes
create_boxplots(CellMarker_ssGSEA_2)
create_boxplots <- function(result_df) {
unique_processes <- unique(result_df$id)
purrr::map(unique_processes, function(process_name) {
cellmarker_boxplot <- result_df %>%
filter(id == process_name) %>%
ggplot() +
aes(x = condition, y = nes, fill = if_else(day == 0, "Day 0", type)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_jitter(aes(color = if_else(day == 0, "Day 0", type)),
alpha = 0.3, size = 0.1) +
geom_boxplot(outliers = F) +
theme_few() +
scale_fill_manual(values = c("Day 0" = "white",
ann_vaxsig_colors$type)) +
scale_color_manual(values = c("Day 0" = "gray80",
ann_vaxsig_colors$type)) +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
vjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.margin = margin(0, 0, 0, 2, "cm")) +
labs(y = "NES",
title = process_name,
x="",
subtitle = "By week",
fill = "Type") +
guides(color = "none") +
facet_wrap(~disease_vac, scales = "free_x")
ggsave(cellmarker_boxplot,
file = here("Figures", paste0("GSEA_singlesample_CellMarker_boxplot_", process_name, ".png")),
width = 12, height = 6)
})
}
# install.packages("themis")
# install.packages("ranger")
# install.packages("workflowsets")
# install.packages("glmnet")
# install.packages("kknn")
# install.packages("nnet")
# install.packages("tictoc")
# install.packages("ggExtra")
# install.packages("remotes")
# remotes::install_github("omnideconv/immunedeconv")
install.packages("metap")
library(metap)
library(metap)
library(metap)
install.packages("metap")
library(metap)
# install.packages("ranger")
# install.packages("workflowsets")
# install.packages("glmnet")
# install.packages("kknn")
# install.packages("nnet")
# install.packages("tictoc")
# install.packages("ggExtra")
# install.packages("remotes")
# remotes::install_github("omnideconv/immunedeconv")
# install.packages("metap")
install.packages("multtest")
library(metap)
library(multtest)
install.packages("multtest")
library(multtest)
library(metap)
metap
install.packages("metap")
library(metap)
library(metap)
# install.packages("themis")
# install.packages("ranger")
# install.packages("workflowsets")
# install.packages("glmnet")
# install.packages("kknn")
# install.packages("nnet")
# install.packages("tictoc")
# install.packages("ggExtra")
# install.packages("remotes")
# remotes::install_github("omnideconv/immunedeconv")
BiocManager::install("multtest")
library(metap)
gse201530_counts_ready <- readRDS("~/Desktop/Github - Covid Atlas/DGE analysis/gse201530_counts_ready.rds")
gse201530_counts_ready = readRDS(here("DGE analysis", "gse201530_counts_ready.rds"))
gse201530_counts_ready = readRDS(here("DGE analysis", "gse201530_counts_ready.rds"))
gse201530_counts_ready = readRDS(here("DGE analysis", "gse201530_counts_ready.rds"))
countData <- gse201530_counts_ready
filter(gse_id == "GSE201530")
GSE201530_metadata = ann_vaccines_samples %>%
filter(gse_id == "GSE201530")
GSE201530_metadata = ann_vaccines_samples %>%
GSE201530_metadata = ann_vaccines_samples %>%
filter(gse_id == "GSE201530")
GSE201530_metadata
GSE201530_metadata
select(sample, everything())
colData <- GSE201530_metadata %>%
mutate(
condition = as.factor(condition)) %>%
select(sample, everything())
colData <- GSE201530_metadata %>%
mutate(
condition = as.factor(condition)) %>%
select(sample, everything())
colData
dds <- DESeqDataSetFromMatrix(countData = countData,
colData = colData,
design = ~ condition)
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
#Wald
dds <- DESeq(dds)
resultsNames(dds)
###### overall DEGs
res <- results(dds) %>%
as.data.frame()
res <- results(dds) %>%
as.data.frame()
res
res <- results(dds) %>%
as.data.frame() %>%
rownames_to_column("genes")
#Save
write_csv(res, file = here("DGE analysis", "gse201530_dds_DESeq2_Wald_condition_DEGs.rds"))
res
gse189039_counts_ready <- readRDS("~/Desktop/Github - Covid Atlas/DGE analysis/gse189039_counts_ready.rds")
gse189039_counts_ready = readRDS(here("DGE analysis", "gse189039_counts_ready.rds"))
filter(gse_id == "GSE189039")
GSE189039_metadata = ann_vaccines_samples %>%
filter(gse_id == "GSE189039")
colData = GSE189039_metadata %>%
mutate(condition = as.factor(condition))
countData <- gse189039_counts_ready
colData = GSE189039_metadata %>%
mutate(condition = as.factor(condition))
###### Crie o objeto DESeqDataSet ######
dds <- DESeqDataSetFromMatrix(countData = countData,
colData = colData,
design = ~ condition)
dds <- DESeq(dds)
resultsNames(dds)
###### overall DEGs
res <- results(dds) %>%
as.data.frame() %>%
rownames_to_column("genes")
resultsNames(dds)
res <- results(dds) %>%
as.data.frame() %>%
rownames_to_column("genes")
res
write_csv(res, file = here("DGE analysis", "gse189039_dds_DESeq2_Wald_condition_DEGs.rds"))
res
gse206023_counts_ready <- readRDS("~/Desktop/Github - Covid Atlas/raw_data/gse206023_counts_ready.rds")
##Defina as variáveis
gse206023_counts_ready <- readRDS(here("raw_data", "gse206023_counts_ready.rds"))
gse206023_metadata = ann_vaccines_samples %>%
filter(gse_id == "GSE206023")
colData <- gse206023_metadata %>%
mutate(condition = as.factor(condition))
gse206023_metadata = ann_vaccines_samples %>%
filter(gse_id == "GSE206023")
colData <- gse206023_metadata %>%
mutate(condition = as.factor(condition))
gse206023_metadata
countData
colData
colData <- gse206023_metadata %>%
mutate(condition = as.factor(condition)) %>%
select(sample, everything())
colData
countData
dds <- DESeqDataSetFromMatrix(countData = countData,
colData = colData,
design = ~condition)
colData <- gse206023_metadata %>%
mutate(condition = as.factor(condition)) %>%
select(sample, everything())
colData
countData
gse206023_counts_ready
countData <- gse206023_counts_ready
countData
colData
countData <- gse206023_counts_ready
mutate(condition = as.factor(condition)) %>%
colData <- gse206023_metadata %>%
mutate(condition = as.factor(condition)) %>%
select(sample, everything())
colData <- gse206023_metadata %>%
mutate(condition = as.factor(condition)) %>%
select(sample, everything())
dds <- DESeqDataSetFromMatrix(countData = countData,
colData = colData,
design = ~condition)
colData <- gse206023_metadata %>%
mutate(condition = as.factor(condition)) %>%
select(sample, everything())
colData
countData
colData
colnames(gse206023_counts_ready)
colnames(gse206023_counts_ready)
countData <- gse206023_counts_ready %>%
select(colnames(gse206023_counts_ready) %>%
arrange())
colnames(gse206023_counts_ready) %>%
as.data.frame() %>%
arrange() %>%
pull(.)
countData <- gse206023_counts_ready %>%
select(colnames(gse206023_counts_ready) %>%
as.data.frame() %>%
arrange() %>%
pull(.))
countData
colnames(gse206023_counts_ready) %>%
as.data.frame() %>%
arrange() %>%
pull(.)
colnames(gse206023_counts_ready) %>%
as.data.frame() %>%
arrange() %>%
pull(.)
