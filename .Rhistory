links_df_W2 = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
inner_join(ann_vaccines %>%
filter(week == 2) %>%
dplyr::select(Cond1 = condition),
by = "Cond1") %>%
inner_join(ann_vaccines %>%
filter(week == 2) %>%
dplyr::select(Cond2 = condition),
by = "Cond2") %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_week2 = links_df_W2 %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(Shared = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_w2 = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df_W2,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_w2 = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df_W2,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
#Week 4 ------
links_df_W4 = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
inner_join(ann_vaccines %>%
filter(week == 4) %>%
dplyr::select(Cond1 = condition),
by = "Cond1") %>%
inner_join(ann_vaccines %>%
filter(week == 4) %>%
dplyr::select(Cond2 = condition),
by = "Cond2") %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_week4 = links_df_W4 %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(Shared = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_w4 = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df_W4,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_w4 = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df_W4,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
#Week 7 ------
links_df_W7 = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
inner_join(ann_vaccines %>%
filter(week == 7) %>%
dplyr::select(Cond1 = condition),
by = "Cond1") %>%
inner_join(ann_vaccines %>%
filter(week == 7) %>%
dplyr::select(Cond2 = condition),
by = "Cond2") %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_week7 = links_df_W7 %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(Shared = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_w7 = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df_W7,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_w7 = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df_W7,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
#Plot
png(filename = here("Figures","ChordDiagram_Covid19_Weeks_1-2-4-7_jaccard.png"),
width = 12, height = 14, units = "in", res = 300)
par(mfrow = c(2, 2))
#WEEK 1
chordDiagram(mat_week1,
grid.col = grid.col_w1,
annotationTrack = "grid",
directional = -1,
big.gap = 6,
transparency = 0,
small.gap = 3,
link.zindex = rank(mat_week1),
h.ratio = 0.7,
group = group_w1,
preAllocateTracks = list(track.height = 0.5 * max(strwidth(unlist(dimnames(mat_week1))))))
#Labels
circos.track(
track.index = 1,
panel.fun = function(x, y) {
circos.text(
CELL_META$xcenter,
CELL_META$ylim[1],
CELL_META$sector.index,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.8, #Label size
font = 0.1)},#Label face
bg.border = NA)
title("Week 1")
# WEEK 2
chordDiagram(mat_week2, grid.col = grid.col_w2,
annotationTrack = "grid",
big.gap = 50,
group = group_w2,
small.gap = 3,
link.zindex = rank(mat_week2),
h.ratio = 0.7,
directional = -1,
transparency = 0,
preAllocateTracks = list(track.height = 0.5 * max(strwidth(unlist(dimnames(mat_week2))))))
#Labels
circos.track(
track.index = 1,
panel.fun = function(x, y) {
circos.text(
CELL_META$xcenter,
CELL_META$ylim[1],
CELL_META$sector.index,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.8, #Label size
font = 0.1)},
bg.border = NA)
title("Week 2")
# WEEK 4
chordDiagram(mat_week4, grid.col = grid.col_w4,
annotationTrack = "grid",
big.gap = 50,
group = group_w4,
small.gap = 3,
link.zindex = rank(mat_week4),
h.ratio = 0.7,
directional = -1,
transparency = 0,
preAllocateTracks = list(track.height = 0.5 * max(strwidth(unlist(dimnames(mat_week4))))))
#Labels
circos.track(
track.index = 1,
panel.fun = function(x, y) {
circos.text(
CELL_META$xcenter,
CELL_META$ylim[1],
CELL_META$sector.index,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.8, #Label size
font = 0.1)},
bg.border = NA)
title("Week 4")
# WEEK 7
chordDiagram(mat_week7, grid.col = grid.col_w7,
annotationTrack = "grid",
big.gap = 50,
group = group_w7,
small.gap = 3,
link.zindex = rank(mat_week7),
h.ratio = 0.7,
directional = -1,
transparency = 0,
preAllocateTracks = list(track.height = 0.5 * max(strwidth(unlist(dimnames(mat_week7))))))
#Labels
circos.track(
track.index = 1,
panel.fun = function(x, y) {
circos.text(
CELL_META$xcenter,
CELL_META$ylim[1],
CELL_META$sector.index,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.8, #Label size
font = 0.1)},
bg.border = NA)
title("Week 7")
dev.off()
circos.clear()
#Types
###### All -----
links_df = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_types = links_df %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(jaccard_distance = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_types = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_types = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
# Vaccination only -------
links_df_vac = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "V") %>%
dplyr::select(Cond1 = condition),
by = "Cond1") %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "V") %>%
dplyr::select(Cond2 = condition),
by = "Cond2") %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_types_vac = links_df_vac %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(jaccard_distance = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_types_vac = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df_vac,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_types_vac = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df_vac,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
#Infection only
links_df_inf = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "I") %>%
dplyr::select(Cond1 = condition),
by = "Cond1") %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "I") %>%
dplyr::select(Cond2 = condition),
by = "Cond2") %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_types_inf = links_df_inf %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(jaccard_distance = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_types_inf = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df_inf,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_types_inf = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df_inf,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
#Types
###### All -----
links_df = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_types = links_df %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(jaccard_distance = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_types = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_types = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
# Vaccination only -------
links_df_vac = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "V") %>%
dplyr::select(Cond1 = condition),
by = "Cond1") %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "V") %>%
dplyr::select(Cond2 = condition),
by = "Cond2") %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_types_vac = links_df_vac %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(jaccard_distance = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_types_vac = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df_vac,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_types_vac = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df_vac,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
#Infection only
links_df_inf = shared_genes_df_mirror %>%
filter(pvalue < 0.05,
Shared > 1) %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "I") %>%
dplyr::select(Cond1 = condition),
by = "Cond1") %>%
inner_join(ann_vaccines %>%
filter(disease_vac == "I") %>%
dplyr::select(Cond2 = condition),
by = "Cond2") %>%
dplyr::select(Cond1, Cond2, jaccard_distance)
mat_types_inf = links_df_inf %>%
pivot_wider(names_from = "Cond2", values_from = "jaccard_distance", values_fill = list(jaccard_distance = NA)) %>%
column_to_rownames("Cond1") %>%
dplyr::select(sort(names(.))) %>%
as.matrix()
grid.col_types_inf = ann_vaxsig_colors$type %>%
as.data.frame() %>%
rownames_to_column("type") %>%
rename(color = ".") %>%
inner_join(ann_vaccines %>%
dplyr::select(Cond1 = condition, type), by = "type") %>%
inner_join(links_df_inf,
by = "Cond1") %>%
dplyr::select(Cond1, color) %>%
distinct() %>%
pull(color, Cond1)
group_types_inf = ann_vaccines %>%
dplyr::select(Cond1 = condition, type) %>%
inner_join(links_df_inf,
by = "Cond1") %>%
dplyr::select(Cond1, type) %>%
distinct() %>%
pull(type, Cond1)
#Plot
#Types
png(filename = here("Figures","ChordDiagram_Covid19_Types_All_jaccard_distance.png"),
width = 5, height = 5, units = "in", res = 300)
#Infection and vaccination
chordDiagram(mat_types, grid.col = grid.col_types,
annotationTrack = "grid",  transparency = 0,
big.gap = 10,
small.gap = 3,
directional = -1,
group = group_types,
link.zindex = rank(mat_types),
h.ratio = 0.7,
preAllocateTracks = list(track.height = 0.5 * max(strwidth(unlist(dimnames(mat_types))))))
circos.track(
track.index = 1,
panel.fun = function(x, y) {
circos.text(
CELL_META$xcenter,
CELL_META$ylim[1],
CELL_META$sector.index,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.5, #Label size
font = 0.1
)},
bg.border = NA)
title("Infection and Vaccination")
dev.off()
circos.clear()
png(filename = here("Figures","ChordDiagram_Covid19_Types_Inf_Vac_jaccard_distance.png"),
width = 6, height = 12, units = "in", res = 300)
par(mfrow = c(2, 1))
#Vaccination
chordDiagram(mat_types_vac, grid.col = grid.col_types_vac,
annotationTrack = "grid", transparency = 0,
big.gap = 6,
small.gap = 3,
directional = -1,
group = group_types,
link.zindex = rank(mat_types_vac),
h.ratio = 0.7,
preAllocateTracks = list(track.height = 0.5 * max(strwidth(unlist(dimnames(mat_types_vac))))))
circos.track(
track.index = 1,
panel.fun = function(x, y) {
circos.text(
CELL_META$xcenter,
CELL_META$ylim[1],
CELL_META$sector.index,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.5, #Label size
font = 0.1
)},
bg.border = NA)
title("Vaccination only")
#Infection
chordDiagram(mat_types_inf, grid.col = grid.col_types_inf,
annotationTrack = "grid", transparency = 0,
big.gap = 50,
small.gap = 3,
directional = -1,
group = group_types,
h.ratio = 0.7,
link.zindex = rank(mat_types_inf),
preAllocateTracks = list(track.height = 0.5 * max(strwidth(unlist(dimnames(mat_types_inf))))))
circos.track(
track.index = 1,
panel.fun = function(x, y) {
circos.text(
CELL_META$xcenter,
CELL_META$ylim[1],
CELL_META$sector.index,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.5, #Label size
font = 0.1
)},
bg.border = NA)
title("Infection only")
circos.clear()
dev.off()
library(chorddiag)
today()
---
title: "Covid-19 Vaccination Atlas"
11/16
24/22
