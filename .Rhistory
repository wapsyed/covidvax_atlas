height = 10)
all_degs_biotypes_plot_all
#ImmuneGO
all_degs_biotypes_immune = all_degs_p_05_vac_infected %>%
inner_join(all_degs_totals, by = "condition") %>%
filter(genes %in% immunego_btm_genes$genes) %>%
inner_join(gene_info %>% select(genes = hgnc_symbol, gene_biotype), by = "genes") %>%
mutate(gene_biotype_grouped = case_when(str_detect(gene_biotype, "IG_") ~ "Protein coding",
str_detect(gene_biotype, "TR_") ~ "Protein coding",
str_detect(gene_biotype, "pseudogene") ~ "Pseudogene",
str_detect(gene_biotype, "protein_coding") ~ "Protein coding",
str_detect(gene_biotype, "Mt") ~ "Mithochondrial RNA",
str_detect(gene_biotype, "ribozyme") ~ "Ribozyme",
str_detect(gene_biotype, "RNA") ~ "Non-coding RNAs",
str_detect(gene_biotype, "TEC") ~ "To be Experimentally Confirmed",
TRUE ~ gene_biotype)) %>%
group_by(condition, gene_biotype_grouped) %>%
summarise(n_biotypes = n(),
n_total = n_total) %>%
distinct() %>%
mutate(n_perc = 100*(n_biotypes/n_total)) %>%
inner_join(ann_vaccines, by="condition") %>%
ungroup()
#Required files
#Filter fdr by sample size minimum
all_degs_p_05_vac_infected = read_rds(file = here("DGE analysis", "all_studies_degs_weighted.rds")) %>%
filter(if_else(n >= 5, fdr <= 0.05, fdr <= (0.05 * 6/n)))
ann_vaccines_conditions = read_csv(here("Annotations and metadata", "ann_vaccines_conditions.csv"))
ann_vaccines = ann_vaccines_conditions
all_degs = all_degs_p_05_vac_infected %>%
group_by(condition, direction) %>%
summarise(n_degs = n()) %>%
inner_join(ann_vaccines, by="condition") %>%
ungroup()
all_degs_total = all_degs %>%
pivot_wider(names_from = "direction", values_from = "n_degs") %>%
group_by(condition) %>%
mutate(TOTAL = sum(DOWN + NEUTRAL + UP)) %>%
select(condition, DOWN:TOTAL) %>%
distinct()
all_degs_total
# Plot 1
# install.packages("randomForest")
# install.packages("caret")
# install.packages("rpart")
# install.packages("rpart.plot")
# install.packages("tidymodels")
# install.packages("reticulate")
# install.packages("themis")
# install.packages("ranger")
# install.packages("workflowsets")
# install.packages("glmnet")
# install.packages("kknn")
# install.packages("nnet")
# install.packages("tictoc")
# install.packages("ggExtra")
# install.packages("remotes")
# remotes::install_github("omnideconv/immunedeconv")
# BiocManager::install("multtest")
# install.packages("weights")
# install.packages("vip")
# install.packages("ggstatsplot")
# install.packages("chorddiag")
# devtools::install_github("cmartin/ggConvexHull")
library(maditr)
library(readxl)
library(ggConvexHull)
library(randomForest)
library(ranger)
library(caret)
library(reticulate)
library(themis)
library(rpart)
library(rpart.plot)
library(here)
library(ggrepel)
library(ComplexHeatmap)
library(janitor)
library(ggsci)
library(vip)
library(circlize)
library(workflowsets)
library(glmnet)
library(kknn)
library(edgeR)
library(nnet)
library(ggthemes)
library(readr)
library(qvalue)
library(GEOquery)
library(Matrix)
library(RColorBrewer)
library(celldex)
library(biomaRt)
library(org.Hs.eg.db)
library(plotly)
library(DESeq2)
library(msigdbr)
library(clusterProfiler)
library(EnhancedVolcano)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(esquisse)
library(corto)
library(scales)
library(ggstatsplot)
library(patchwork)
library(vegan)
library(BH)
# library(chorddiag)
library(tidyverse)
library(tidymodels)
library(purrr)
# library(immunedeconv)
tidymodels_prefer()
btm_annotation_genes = readRDS(here("VaxGO gene sets", "btm_annotation_genes.rds"))
ImmuneGO_BTM_specific
# Specific modules
degs_covid_vax_GSEA_specific_ALL <- degs_covid_vax %>%
select(condition, genes, log2fold_change) %>%
autoGSEA(TERM2GENE = ImmuneGO_BTM_specific,
geneset_name = "ImmuneGO_BTM_specific")
geneset_name = "ImmuneGO_BTM_specific"
filename = "All_covid_13Vax"
degs_covid_vax_GSEA_specific_ALL <- degs_covid_vax %>%
select(condition, genes, log2fold_change) %>%
autoGSEA(TERM2GENE = ImmuneGO_BTM_specific,
geneset_name = "ImmuneGO_BTM_specific")
degs_covid_vax_GSEA_specific = degs_covid_vax_GSEA_specific_ALL %>%
rownames_to_column("delete") %>%
clean_names() %>%
select(condition, id, everything())
#Save
write_csv(degs_covid_vax_GSEA,
file = here("Gene set enrichment analysis", paste0(filename, geneset_name, "_GSEA_ALL", ".csv")))
geneset_name
degs_covid_vax_GSEA_specific
#Save
write_csv(degs_covid_vax_GSEA_specific,
file = here("Gene set enrichment analysis", paste0(filename, geneset_name, "_GSEA_ALL", ".csv")))
degs_covid_vax_GSEA_specific
paste0(filename, geneset_name, "_GSEA_ALL", ".csv")
All_covid_13VaxImmune_GO_T2G_specfic_GSEA_ALL <- read_csv("Gene set enrichment analysis/All_covid_13VaxImmuneGO_BTM_specific_GSEA_ALL.csv")
All_covid_13VaxImmune_GO_T2G_specfic_GSEA_ALL
df = All_covid_13VaxImmune_GO_T2G_specfic_GSEA_ALL %>%
# filter(qvalue<= 0.5) %>%
inner_join(ann_vaccines_covid_other_conditions, by = "condition") %>%
mutate(logq = -log10(qvalue))
df =  df %>%
mutate(day = fct_relevel(day, df %>%
select(day) %>%
distinct() %>%
mutate(day = as.character(day),
day = as.numeric(day)) %>%
arrange(day) %>%
pull() %>%
as.character()))
row_clustered = df %>%
select(condition, id, nes) %>%
distinct() %>%
pivot_wider(names_from = "condition",
values_from= "nes") %>%
column_to_rownames("id") %>%
as.matrix() %>%
replace(is.na(.), 0) %>%
dist(.) %>%
hclust()
result_vac <- cluster_by_day(df %>% filter(disease_vac == "V"), day_column = "day", condition_column = "condition") %>%
distinct() %>%
mutate(day = fct_relevel(day, df$day %>% unique() %>% sort() %>% as.character()))
# Function for clustering by day
cluster_by_day <- function(df, day_column = "day", condition_column = "condition") {
# Obter os níveis do fator da coluna de dias
days <- levels(df[[day_column]])
# Inicializar uma lista para armazenar as ordens
orders <- list()
# Loop por cada nível (dia) da coluna fator day
for (day_value in days) {
# Filtrar os dados para o dia atual
day_data <- df %>%
filter(!!sym(day_column) == day_value) %>%
select(!!sym(condition_column)) %>%
distinct()
# Criar uma matriz binária onde 1 representa a presença da condição
if (nrow(day_data) > 1) {
# Matriz com condições como rótulos e 1 para presença
presence_matrix <- table(day_data[[condition_column]]) > 0
dist_matrix <- as.matrix(presence_matrix)
# Aplicar o clustering
col_clustered <- dist(dist_matrix) %>% hclust()
# Armazenar a ordem dos clusters
orders[[day_value]] <- col_clustered$labels[col_clustered$order]
} else {
# Se houver apenas uma condição, armazenar o rótulo
orders[[day_value]] <- as.character(day_data[[condition_column]])
}
}
# Converter a lista de ordens para um data frame
order_df <- data.frame(
day = rep(names(orders), sapply(orders, length)),
condition = unlist(orders)
)
return(order_df)
}
filter(qvalue<= 0.25) %>%
inner_join(ann_vaccines_covid_other_conditions, by = "condition") %>%
mutate(logq = -log10(qvalue))
All_covid_13VaxImmune_GO_T2G_specfic_GSEA_ALL
patch_immune_main
df = All_covid_13VaxImmune_GO_T2G_specfic_GSEA_ALL %>%
filter(p_adjust <= 0.25) %>%
inner_join(ann_vaccines_covid_other_conditions, by = "condition") %>%
mutate(logq = -log10(qvalue))
df =  df %>%
mutate(day = fct_relevel(day, df %>%
select(day) %>%
distinct() %>%
mutate(day = as.character(day),
day = as.numeric(day)) %>%
arrange(day) %>%
pull() %>%
as.character()))
row_clustered = df %>%
select(condition, id, nes) %>%
distinct() %>%
pivot_wider(names_from = "condition",
values_from= "nes") %>%
column_to_rownames("id") %>%
as.matrix() %>%
replace(is.na(.), 0) %>%
dist(.) %>%
hclust()
row_shared =  df %>%
filter(id %in% row_clustered$labels,p_adjust <= 0.10) %>%
mutate(condition = factor(condition, column_order),
id = factor(id, levels = row_clustered$labels[row_clustered$order]),
id = str_to_title(id),
id = case_when(id == "Humoral Adaptive Immune System" ~ "Humoral Adap.",
id == "Cellular Adaptive Immune System" ~ "Cellular Adap.",
id == "Adaptive Immune System" ~ "Adap.",
id == "Innate Immune System" ~ "Innate",
id == "Complement Immune System" ~ "Complement",
id == "Immunoglobulin Mediated Response" ~ "Ig-mediated",
id == "Antiviral And Interferon" ~ "Antiviral/IFN",.default = id)) %>%
group_by(id) %>%
summarize(n = n()) %>%
ungroup() %>%
arrange(-n)
row_shared =  df %>%
filter(id %in% row_clustered$labels,
p_adjust <= 0.10) %>%
mutate(condition = factor(condition, column_order),
id = factor(id, levels = row_clustered$labels[row_clustered$order]),
id = str_to_title(id),
id = case_when(id == "Humoral Adaptive Immune System" ~ "Humoral Adap.",
id == "Cellular Adaptive Immune System" ~ "Cellular Adap.",
id == "Adaptive Immune System" ~ "Adap.",
id == "Innate Immune System" ~ "Innate",
id == "Complement Immune System" ~ "Complement",
id == "Immunoglobulin Mediated Response" ~ "Ig-mediated",
id == "Antiviral And Interferon" ~ "Antiviral/IFN",.default = id)) %>%
group_by(id) %>%
summarize(n = n()) %>%
ungroup() %>%
arrange(-n)
row_shared =  df %>%
filter(id %in% row_clustered$labels,
p_adjust <= 0.10) %>%
mutate(id = factor(id, levels = row_clustered$labels[row_clustered$order]),
id = str_to_title(id),
id = case_when(id == "Humoral Adaptive Immune System" ~ "Humoral Adap.",
id == "Cellular Adaptive Immune System" ~ "Cellular Adap.",
id == "Adaptive Immune System" ~ "Adap.",
id == "Innate Immune System" ~ "Innate",
id == "Complement Immune System" ~ "Complement",
id == "Immunoglobulin Mediated Response" ~ "Ig-mediated",
id == "Antiviral And Interferon" ~ "Antiviral/IFN",.default = id)) %>%
group_by(id) %>%
summarize(n = n()) %>%
ungroup() %>%
arrange(-n)
df = All_covid_13VaxImmune_GO_T2G_specfic_GSEA_ALL %>%
filter(p_adjust <= 0.25) %>%
inner_join(ann_vaccines_covid_other_conditions, by = "condition") %>%
mutate(logq = -log10(qvalue))
df =  df %>%
mutate(day = fct_relevel(day, df %>%
select(day) %>%
distinct() %>%
mutate(day = as.character(day),
day = as.numeric(day)) %>%
arrange(day) %>%
pull() %>%
as.character()))
row_clustered = df %>%
select(condition, id, nes) %>%
distinct() %>%
pivot_wider(names_from = "condition",
values_from= "nes") %>%
column_to_rownames("id") %>%
as.matrix() %>%
replace(is.na(.), 0) %>%
dist(.) %>%
hclust()
row_shared =  df %>%
filter(id %in% row_clustered$labels,
p_adjust <= 0.10) %>%
mutate(id = factor(id, levels = row_clustered$labels[row_clustered$order]),
id = str_to_title(id),
id = case_when(id == "Humoral Adaptive Immune System" ~ "Humoral Adap.",
id == "Cellular Adaptive Immune System" ~ "Cellular Adap.",
id == "Adaptive Immune System" ~ "Adap.",
id == "Innate Immune System" ~ "Innate",
id == "Complement Immune System" ~ "Complement",
id == "Immunoglobulin Mediated Response" ~ "Ig-mediated",
id == "Antiviral And Interferon" ~ "Antiviral/IFN",.default = id)) %>%
group_by(id) %>%
summarize(n = n()) %>%
ungroup() %>%
arrange(-n)
result_vac <- cluster_by_day(df %>% filter(disease_vac == "V"), day_column = "day", condition_column = "condition") %>%
distinct() %>%
mutate(day = fct_relevel(day, df$day %>% unique() %>% sort() %>% as.character()))
result_inf_vac2 <- cluster_by_day(df %>%
filter(disease_vac == "I",
dose %in% c("2")), day_column = "day") %>%
mutate(day = fct_relevel(day, df$day %>% unique() %>% sort() %>% as.character()))
result_inf_vac01 <- cluster_by_day(df %>%
filter(disease_vac == "I",
dose %in% c("0", "1")), day_column = "day") %>%
mutate(day = fct_relevel(day, df$day %>% unique() %>% sort() %>% as.character()))
column_order <- c(result_vac$condition, result_inf_vac2$condition, result_inf_vac01$condition)
labels_set <- df %>%
filter(id %in% row_clustered$labels) %>%
mutate(condition = factor(condition, levels = column_order)) %>%
ggplot() +
aes(x = condition, y = 1, fill = set) +
geom_tile() +
scale_fill_manual(values = ann_vaxsig_colors$set) +
theme_void() +
labs(y = "Set") +
theme(axis.title.y = element_text(size = 12, hjust = 1),
legend.position = "right")
labels_disease_vac <- df %>%
filter(id %in% row_clustered$labels) %>%
mutate(condition = factor(condition, levels = column_order)) %>%
ggplot() +
aes(x = condition, y = 1, fill = disease_vac) +
geom_tile() +
scale_fill_manual(values = ann_vaxsig_colors$disease_vac) +
theme_void() +
labs(y = "Infection/Vaccination") +
theme(axis.title.y = element_text(size = 12, hjust = 1),
legend.position = "right")
labels_type <- df %>%
filter(id %in% row_clustered$labels) %>%
mutate(condition = factor(condition, levels = column_order)) %>%
ggplot() +
aes(x = condition, y = 1, fill = type) +
geom_tile() +
scale_fill_manual(values = ann_vaxsig_colors$Platform) +
theme_void() +
labs(y = "Type") +
theme(axis.title.y = element_text(size = 12, hjust = 1),
legend.position = "right")
labels_dose <- df %>%
filter(id %in% row_clustered$labels) %>%
mutate(condition = factor(condition, levels = column_order)) %>%
ggplot() +
aes(x = condition, y = 1, fill = dose) +
geom_tile() +
scale_fill_manual(values = ann_vaxsig_colors$dose) +
theme_void() +
labs(y = "Dose") +
theme(axis.title.y = element_text(size = 12, hjust = 1),
legend.position = "right")
labels_week = df %>%
filter(id %in% row_clustered$labels) %>%
mutate(condition = factor(condition, column_order)) %>%
ggplot() +
aes(x = condition, y = 1, fill = week) +
geom_tile() +
scale_fill_manual(values = ann_vaxsig_colors$week) +
theme_void() +
labs(y = "Week") +
theme(axis.title.y = element_text(size = 12, hjust = 1),
legend.position = "right")
labels_day = df %>%
filter(id %in% row_clustered$labels) %>%
mutate(condition = factor(condition, column_order)) %>%
ggplot() +
aes(x = condition, y = 1, fill = day) +
geom_tile() +
scale_fill_manual(values = ann_vaxsig_colors$day) +
theme_void() +
labs(y = "Day") +
theme(axis.title.y = element_text(size = 12, hjust = 1),
legend.position = "right")
#Plot
dotplot = df %>%
filter(id %in% row_clustered$labels) %>%
mutate(signific = case_when(p_adjust <= 0.10 ~ "*",
TRUE ~ "")) %>%
mutate(condition = factor(condition, column_order),
# id = factor(id, levels = row_clustered$labels[row_clustered$order]),
id = str_to_title(id),
id = case_when(id == "Humoral Adaptive Immune System" ~ "Humoral Adap.",
id == "Cellular Adaptive Immune System" ~ "Cellular Adap.",
id == "Adaptive Immune System" ~ "Adap.",
id == "Innate Immune System" ~ "Innate",
id == "Complement Immune System" ~ "Complement",
id == "Immunoglobulin Mediated Response" ~ "Ig-mediated",
id == "Antiviral And Interferon" ~ "Antiviral/IFN",.default = id),
id = fct_relevel(id, c(row_shared$id))) %>%
ggplot(aes(x=condition, y = fct_rev(id),
fill = nes,
color = nes
)) +
geom_tile(color = "white",
size = 0.5) +
geom_text(aes(label = signific), size = 6, vjust = 0.5, color = "black") +
theme_minimal() +
theme(axis.text = element_text(color = "black", size = 15),
axis.line.x  = element_line(size = 1, color ="black"),
# axis.line.y  = element_line(size = 1, color ="black"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
axis.ticks = element_line(size = 1, color ="black"),
# panel.grid = element_line(linetype = 2, color = "gray75"),
panel.grid = element_blank(),
legend.direction = "horizontal",
legend.position = "bottom") +
labs(x = "",
y = "") +
scale_fill_gradient2(low = "#4DBBD5FF",
mid = "white",
midpoint = 0,
name = "NES",
high = "#DC0000FF") +
# scale_color_gradient2(low = "blue",
#                       mid = "white",
#                       midpoint = 0,
#                       name = "NES",
#                     high = "#DC0000FF") +
scale_y_discrete(position = "right")
patch_immune_main =
labels_set /
labels_disease_vac /
labels_type /
labels_dose/
labels_day/
dotplot +
plot_layout(heights = c(0.05, 0.05, 0.05, 0.05, 0.05, 5),
guides = 'collect') +
plot_annotation(title = "GSEA ImmuneGO_BTM",
subtitle = "Specific processes",
theme = theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 20),
plot.margin = margin(5, 1, 5, 1, unit = "cm"),
legend.direction = "vertical",
legend.box = "vertical"))
patch_immune_main %>%
ggsave(filename = here("Figures", paste0(filename, "_GSEA_ImmuneGO_Specific_Heatmap.png")),
width = 30,
height = 50, limitsize = F)
patch_immune_main
row_shared
df
df %>%
filter(p_adjust <= 0.10)
df
degs_covid_vax_GSEA_specific
degs_covid_vax
autoGSEA <- function(df, TERM2GENE, geneset_name) {
resultados <- list()
condicoes <- df$condition %>%
unique() %>%
as.character()
for (condicao in condicoes) {
degs_condicao <- df %>%
filter(condition == condicao) %>%
select(genes, log2fold_change) %>%
distinct() %>%
mutate(rank = rank(log2fold_change, ties.method = "random")) %>%
arrange(desc(rank))
gene_list_lf2c <- as.vector(degs_condicao$log2fold_change)
names(gene_list_lf2c) <- degs_condicao$genes
gene_list_lf2c <- na.omit(gene_list_lf2c)
gene_list_lf2c <- sort(gene_list_lf2c, decreasing = TRUE)
auto_gsea <- tryCatch({
GSEA(geneList = gene_list_lf2c,
TERM2GENE = TERM2GENE,
minGSSize = 1,
maxGSSize = 1000000,
pvalueCutoff = 1,
pAdjustMethod = "BH") %>%
as.data.frame() %>%
arrange(qvalue) %>%
mutate(condition = condicao,
gsea_enrichment = geneset_name)
}, error = function(e) {
return(NULL)
})
if (!is.null(auto_gsea)) {
resultados[[paste(condicao, geneset_name, sep = "_")]] <- auto_gsea
}
}
resultado_final <- bind_rows(resultados)
return(resultado_final)
}
